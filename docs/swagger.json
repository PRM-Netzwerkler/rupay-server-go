{
    "swagger": "2.0",
    "info": {
        "description": "Backend vor Rupay",
        "title": "Rupay Backend",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8888",
    "basePath": "/api",
    "paths": {
        "/article": {
            "post": {
                "description": "Create a new article with the provided payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Create a new article",
                "parameters": [
                    {
                        "description": "Create article payload",
                        "name": "article",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateArticle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created article",
                        "schema": {
                            "$ref": "#/definitions/db.Article"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to create article",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/article-transaction": {
            "get": {
                "description": "Retrieve a list of all article transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ArticleTransactions"
                ],
                "summary": "Retrieve all article transactions",
                "responses": {
                    "200": {
                        "description": "List of article transactions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.ArticleTransaction"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new article transaction with the provided payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ArticleTransactions"
                ],
                "summary": "Create a new article transaction",
                "parameters": [
                    {
                        "description": "CreateArticleTransaction payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.ArticleTransaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ArticleTransaction data",
                        "schema": {
                            "$ref": "#/definitions/db.ArticleTransaction"
                        }
                    },
                    "400": {
                        "description": "Invalid Payload",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/article-transaction/{articleTransactionId}": {
            "get": {
                "description": "Retrieve an article transaction by the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ArticleTransactions"
                ],
                "summary": "Retrieve an article transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article Transaction ID",
                        "name": "articleTransactionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ArticleTransaction data",
                        "schema": {
                            "$ref": "#/definitions/db.ArticleTransaction"
                        }
                    },
                    "404": {
                        "description": "Article transaction not found",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an article transaction with the provided payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ArticleTransactions"
                ],
                "summary": "Update an article transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article Transaction ID",
                        "name": "articleTransactionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateArticleTransaction payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateArticleTransaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ArticleTransaction data",
                        "schema": {
                            "$ref": "#/definitions/db.ArticleTransaction"
                        }
                    },
                    "400": {
                        "description": "Invalid Payload",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Article transaction not found",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an article transaction by the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ArticleTransactions"
                ],
                "summary": "Delete an article transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article Transaction ID",
                        "name": "articleTransactionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ArticleTransaction deleted successfully"
                    },
                    "404": {
                        "description": "Article transaction not found",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete ArticleTransaction",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/article-type": {
            "get": {
                "description": "Get a list of all article types",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ArticleTypes"
                ],
                "summary": "Retrieve all article types",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all article types",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.ArticleType"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve article types",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new article type with the provided payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ArticleTypes"
                ],
                "summary": "Create a new article type",
                "parameters": [
                    {
                        "description": "Create article type payload",
                        "name": "articleType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateArticleType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created article type",
                        "schema": {
                            "$ref": "#/definitions/db.ArticleType"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to create article type",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/article-type/{articleTypeId}": {
            "get": {
                "description": "Retrieve an article type using its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ArticleTypes"
                ],
                "summary": "Get an article type by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article Type ID",
                        "name": "articleTypeId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved article type",
                        "schema": {
                            "$ref": "#/definitions/db.ArticleType"
                        }
                    },
                    "404": {
                        "description": "Article type not found",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve article type",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an article type with the provided ID and payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ArticleTypes"
                ],
                "summary": "Update an existing article type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article Type ID",
                        "name": "articleTypeId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update article type payload",
                        "name": "articleType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateArticleType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated article type",
                        "schema": {
                            "$ref": "#/definitions/db.ArticleType"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Article type not found",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update article type",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove an article type using its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ArticleTypes"
                ],
                "summary": "Delete an article type by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article Type ID",
                        "name": "articleTypeId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted article type"
                    },
                    "404": {
                        "description": "Article type not found",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete article type",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/articles": {
            "get": {
                "description": "Get a list of all articles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Retrieve all articles",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved all articles",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Article"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve articles",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/articles/{articleId}": {
            "get": {
                "description": "Retrieve an article using its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Get an article by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article ID",
                        "name": "articleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved article",
                        "schema": {
                            "$ref": "#/definitions/db.Article"
                        }
                    },
                    "404": {
                        "description": "Article not found",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve article",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an article with the provided ID and payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Update an existing article",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article ID",
                        "name": "articleId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update article payload",
                        "name": "article",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateArticle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated article",
                        "schema": {
                            "$ref": "#/definitions/db.Article"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Article not found",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update article",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove an article using its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Delete an article by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article ID",
                        "name": "articleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted article"
                    },
                    "404": {
                        "description": "Article not found",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete article",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/event": {
            "post": {
                "description": "Create a new event with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Create a new event",
                "parameters": [
                    {
                        "description": "CreateEvent payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateEvent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event data",
                        "schema": {
                            "$ref": "#/definitions/db.Event"
                        }
                    },
                    "400": {
                        "description": "Invalid Payload",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/event/{id}": {
            "get": {
                "description": "Retrieve an event by the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Retrieve an event by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event data",
                        "schema": {
                            "$ref": "#/definitions/db.Event"
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an event by the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Delete an event by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Event deleted successfully"
                    },
                    "404": {
                        "description": "Event not found",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an event by the provided id and details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Update an event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event data",
                        "schema": {
                            "$ref": "#/definitions/db.Event"
                        }
                    },
                    "400": {
                        "description": "Invalid Payload",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/events": {
            "get": {
                "description": "Retrieve a list of all events",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Retrieve all events",
                "responses": {
                    "200": {
                        "description": "List of events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Event"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/transaction": {
            "get": {
                "description": "Retrieve a list of all transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Retrieve all transactions",
                "responses": {
                    "200": {
                        "description": "List of transactions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Transaction"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new transaction with the provided date and price",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Create a new transaction",
                "parameters": [
                    {
                        "description": "CreateTransaction payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateTransaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction data",
                        "schema": {
                            "$ref": "#/definitions/db.Transaction"
                        }
                    },
                    "400": {
                        "description": "Invalid Payload",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a transaction with the provided date and price",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Update a transaction",
                "parameters": [
                    {
                        "description": "UpdateTransaction payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateTransaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction data",
                        "schema": {
                            "$ref": "#/definitions/db.Transaction"
                        }
                    },
                    "400": {
                        "description": "Invalid Payload",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/transaction/{id}": {
            "get": {
                "description": "Retrieve a transaction by the provided id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Retrieve a transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction data",
                        "schema": {
                            "$ref": "#/definitions/db.Transaction"
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a transaction by the provided id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Delete a transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Transaction deleted successfully"
                    },
                    "404": {
                        "description": "Transaction not found",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete Transaction",
                        "schema": {
                            "$ref": "#/definitions/e.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "db.Article": {
            "type": "object",
            "properties": {
                "article_type_uuid": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "purchase_price": {
                    "type": "number"
                },
                "resell_price": {
                    "type": "number"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "db.ArticleTransaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "article_uuid": {
                    "type": "string"
                },
                "transaction_uuid": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "db.ArticleType": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "db.Event": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "from_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "to_date": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "db.Transaction": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "e.ErrorDetail": {
            "type": "object",
            "properties": {
                "field": {
                    "description": "Field causing the error",
                    "type": "string"
                },
                "issue": {
                    "description": "Description of the issue with the field",
                    "type": "string"
                }
            }
        },
        "e.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Error code",
                    "type": "string"
                },
                "details": {
                    "description": "List of field-specific errors",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/e.ErrorDetail"
                    }
                },
                "error": {
                    "description": "Stack Trace",
                    "type": "string"
                },
                "message": {
                    "description": "Human-readable error message",
                    "type": "string"
                }
            }
        },
        "schemas.CreateArticle": {
            "type": "object",
            "required": [
                "article_type_uuid",
                "name",
                "purchase_price",
                "resell_price"
            ],
            "properties": {
                "article_type_uuid": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "purchase_price": {
                    "type": "number"
                },
                "resell_price": {
                    "type": "number"
                }
            }
        },
        "schemas.CreateArticleType": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "desc": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateEvent": {
            "type": "object",
            "required": [
                "from_date",
                "name",
                "to_date"
            ],
            "properties": {
                "desc": {
                    "type": "string"
                },
                "from_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "to_date": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateTransaction": {
            "type": "object",
            "required": [
                "date",
                "price"
            ],
            "properties": {
                "date": {
                    "type": "string",
                    "example": "2024-01-24T00:00:00Z"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "schemas.UpdateArticle": {
            "type": "object",
            "properties": {
                "article_type_uuid": {
                    "$ref": "#/definitions/uuid.NullUUID"
                },
                "desc": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "purchase_price": {
                    "type": "number"
                },
                "resell_price": {
                    "type": "number"
                }
            }
        },
        "schemas.UpdateArticleTransaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "article_uuid": {
                    "$ref": "#/definitions/uuid.NullUUID"
                },
                "transaction_uuid": {
                    "$ref": "#/definitions/uuid.NullUUID"
                }
            }
        },
        "schemas.UpdateArticleType": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateTransaction": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "example": "2024-01-24T00:00:00Z"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "uuid.NullUUID": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if UUID is not NULL",
                    "type": "boolean"
                }
            }
        }
    }
}